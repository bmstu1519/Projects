docker run -p 1521:1521 --name oracle store/oracle/database-enterprise:12.2.0.1
- запуск НОВОГО контейнера с портом 1521:1521 ;

docker run -it --name oracle --memory="3g" store/oracle/database-enterprise:12.2.0.1
- запуск НОВОГО образа с ограниченым использованием максимальной(limit) памяти = 3гб ;

docker stats - в реальном времени показывает, какие ресурсы расходует образ ;

docker update -m 1G oracle - обновление использользования количество памяти контейнером (-m = --memory);

docker start oracle - запуск СУЩЕСТВУЮЩЕГО контейнера, где oracle - имя контейнера ;

docker stop oracle - остановка контейнера ;

Restart-Service LxssManager - рестарт WSL ;

Net stop com.docker.service - powershell ;

Net start com.docker.service - powershell ; 

docker run --hostname=quickstart.cloudera --privileged=true -t -i -v /Users/zOoro/Documents/cloudera --publish-all=true -p 7180:7180 -p 8888 cloudera/quickstart /usr/bin/docker-quickstart

docker cp ojdbc8.jar 4fbbd6559138:\ojdbc8.jar - копирование файлов из виннды в контейнер "4fbbd6559138:\" -домашняя папка конейнера ;

sudo /home/cloudera/cloudera-manager --express # включение сервиса cloudera manager у вновь созданного образа ;
service cloudera-scm-agent start/stop # запуск/остановка агента СМ, начнут функционировать компоненты,которые были ранее включены ;
service cloudera-scm-server start/stop # запуск/остановка сервера СМ, чтобы можно было подключиться через браузер и управлять системой ;

connect sys as sysdba;
 -- Here enter the password as 'Oradoc_db1'
 alter session set "_ORACLE_SCRIPT"=true;

https://dev.to/damith/docker-desktop-container-crash-with-exit-code-139-on-windows-wsl-fix-438 - не запускался контейнер cloudera;



docker run --hostname=DESKTOP-2SNUJ03 -t -i -p 8888:8888 -p 10000:10000 -p 10020:10020 -p 11000:11000 -p 18080:18080 -p 18081:18081 -p 18088:18088 -p 19888:19888 -p 21000:21000 -p 21050:21050 -p 2181:2181 -p 25000:25000 -p 25010:25010 -p 25020:25020 -p 50010:50010 -p 50030:50030 -p 50060:50060 -p 50070:50070 -p 50075:50075 -p 50090:50090 -p 60000:60000 -p 60010:60010 -p 60020:60020 -p 60030:60030 -p 7180:7180 -p 7183:7183 -p 7187:7187 -p 80:80 -p 8020:8020 -p 8032:8032 -p 802:8042 -p 8088:8088 -p 8983:8983 -p 9083:9083 --name hadoop2 galloplabs/hadoop-cdh-impala 
	

docker run --hostname hadoop --name hadoop galloplabs/hadoop-cdh-impala
